= Cross Compilation and Toolchains =

*What is cross compilation?*

Cross-compilation is a process in which the cross-toolchain runs on the host machine(PC) 
and creates executables that run on different machine(ARM). ARM processor instructions can 
be generated by a toolchain.

== Cross-compilation toolchains ==

* Toolchain or a cross-compilation toolchain is a collection of binaries which allows you to 
	compile, assemble, link you application.
* It also contains binaries to debug the application on the target.
* Toolchain also comes with other binaries which help you to analyze the executables
	- dissect different sections of the execuatable 
	- disassemble
	- extract symbol and size information
	- convert executable to other formats such as bin, ihex
	- provides 'C' standard libraries

== Popular Tool-chains: ==

1. GNU Tools(GCC) for ARM Embedded Processors (free and open-source)
2. armcc from ARM Ltd. (ships with KEIL, code restriction version, requires licensing)

== Downloading GCC Toolchain for ARM Embedded processors ==

* If you have installed STM32CubeIDE, this this toolchain would have already installed as 
	a part of the installation.
* [[https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads|Official website]] to download GCC toolchain for ARM.
* Download gcc-arm-none-eabi- , this toolchain is for baremetal devices. (In windows add the 
	binary folder to windows ENV PATH.) 
* Cross toolchain important binaries
	- Compiler, assembler, and linker:
		{{{
$ arm-none-eabi-gcc
		}}}
		- It can also produce .o files.
	- Assembler:
		{{{
$ arm-none-eabi-as
		}}}
		- This assembler converts .s files to .o files.
	- Linker:
			{{{
$ arm-none-eabi-ld
		}}}
		- It links/merge all the object files and library files together.
	- Elf file analyzer:
			{{{
$ arm-none-eabi-objdump
$ arm-none-eabi-readelf
$ arm-none-eabi-nm
		}}}
		- These three commands are used to analyze the object files and see various information 
		  like functions and variables addresses, section information(.data section, 
			.code section, comment section etc) 
	- Format converter:
		{{{
$ arm-none-eabi-objcopy
		}}}
		- It can create .ihex and .bin files from .elf files.

= Build Process =

*Compiling Code:*

{{{
$ arm-none-eabi-gcc -mcpu=cortex-m4 -mthumb -c main.c -o main.o
}}}

*Options Information:*

* -mthumb: 
* -mcpu=cortex-m4:
* -o:
* -c:

*Creating makefile for _stm32f407vgt6_ board:*

Makefiles are helpful in executing the above commands with ease. It automates most of the work. 
Look at this [[file:/home/basith/Coding/microcontroller_programming/stm32/stm32f407vgt6/src/Makefile|makefile]]

